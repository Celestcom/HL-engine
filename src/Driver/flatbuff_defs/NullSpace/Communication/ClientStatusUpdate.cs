// automatically generated by the FlatBuffers compiler, do not modify

namespace NullSpace.Communication
{

using System;
using FlatBuffers;

public struct ClientStatusUpdate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ClientStatusUpdate GetRootAsClientStatusUpdate(ByteBuffer _bb) { return GetRootAsClientStatusUpdate(_bb, new ClientStatusUpdate()); }
  public static ClientStatusUpdate GetRootAsClientStatusUpdate(ByteBuffer _bb, ClientStatusUpdate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ClientStatusUpdate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Status ClientStatus { get { int o = __p.__offset(4); return o != 0 ? (Status)__p.bb.GetShort(o + __p.bb_pos) : Status.Playing; } }

  public static Offset<ClientStatusUpdate> CreateClientStatusUpdate(FlatBufferBuilder builder,
      Status clientStatus = Status.Playing) {
    builder.StartObject(1);
    ClientStatusUpdate.AddClientStatus(builder, clientStatus);
    return ClientStatusUpdate.EndClientStatusUpdate(builder);
  }

  public static void StartClientStatusUpdate(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddClientStatus(FlatBufferBuilder builder, Status clientStatus) { builder.AddShort(0, (short)clientStatus, 0); }
  public static Offset<ClientStatusUpdate> EndClientStatusUpdate(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ClientStatusUpdate>(o);
  }
  public static void FinishClientStatusUpdateBuffer(FlatBufferBuilder builder, Offset<ClientStatusUpdate> offset) { builder.Finish(offset.Value); }
};


}
