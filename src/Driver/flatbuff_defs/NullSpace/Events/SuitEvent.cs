// automatically generated by the FlatBuffers compiler, do not modify

namespace NullSpace.Events
{

using System;
using FlatBuffers;

public struct SuitEvent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static SuitEvent GetRootAsSuitEvent(ByteBuffer _bb) { return GetRootAsSuitEvent(_bb, new SuitEvent()); }
  public static SuitEvent GetRootAsSuitEvent(ByteBuffer _bb, SuitEvent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public SuitEvent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public SuitEventType EventType { get { int o = __p.__offset(4); return o != 0 ? (SuitEventType)__p.bb.Get(o + __p.bb_pos) : SuitEventType.NONE; } }
  public TTable? Event<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o) : null; }

  public static Offset<SuitEvent> CreateSuitEvent(FlatBufferBuilder builder,
      SuitEventType event_type = SuitEventType.NONE,
      int eventOffset = 0) {
    builder.StartObject(2);
    SuitEvent.AddEvent(builder, eventOffset);
    SuitEvent.AddEventType(builder, event_type);
    return SuitEvent.EndSuitEvent(builder);
  }

  public static void StartSuitEvent(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddEventType(FlatBufferBuilder builder, SuitEventType eventType) { builder.AddByte(0, (byte)eventType, 0); }
  public static void AddEvent(FlatBufferBuilder builder, int eventOffset) { builder.AddOffset(1, eventOffset, 0); }
  public static Offset<SuitEvent> EndSuitEvent(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<SuitEvent>(o);
  }
};


}
