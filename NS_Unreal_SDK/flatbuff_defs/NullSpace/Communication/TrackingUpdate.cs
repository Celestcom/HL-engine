// automatically generated by the FlatBuffers compiler, do not modify

namespace NullSpace.Communication
{

using System;
using FlatBuffers;

public struct TrackingUpdate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static TrackingUpdate GetRootAsTrackingUpdate(ByteBuffer _bb) { return GetRootAsTrackingUpdate(_bb, new TrackingUpdate()); }
  public static TrackingUpdate GetRootAsTrackingUpdate(ByteBuffer _bb, TrackingUpdate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public TrackingUpdate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Quaternion? Chest { get { int o = __p.__offset(4); return o != 0 ? (Quaternion?)(new Quaternion()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static void StartTrackingUpdate(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddChest(FlatBufferBuilder builder, Offset<Quaternion> chestOffset) { builder.AddStruct(0, chestOffset.Value, 0); }
  public static Offset<TrackingUpdate> EndTrackingUpdate(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<TrackingUpdate>(o);
  }
  public static void FinishTrackingUpdateBuffer(FlatBufferBuilder builder, Offset<TrackingUpdate> offset) { builder.Finish(offset.Value); }
};


}
