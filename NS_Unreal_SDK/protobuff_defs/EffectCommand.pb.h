// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EffectCommand.proto

#ifndef PROTOBUF_EffectCommand_2eproto__INCLUDED
#define PROTOBUF_EffectCommand_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace NullSpaceIPC {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_EffectCommand_2eproto();
void protobuf_AssignDesc_EffectCommand_2eproto();
void protobuf_ShutdownFile_EffectCommand_2eproto();

class EffectCommand;

enum EffectCommand_Command {
  EffectCommand_Command_UNKNOWN = 0,
  EffectCommand_Command_PLAY = 1,
  EffectCommand_Command_PLAY_CONTINUOUS = 2,
  EffectCommand_Command_HALT = 3,
  EffectCommand_Command_PLAY_RTP = 4,
  EffectCommand_Command_EffectCommand_Command_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EffectCommand_Command_EffectCommand_Command_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EffectCommand_Command_IsValid(int value);
const EffectCommand_Command EffectCommand_Command_Command_MIN = EffectCommand_Command_UNKNOWN;
const EffectCommand_Command EffectCommand_Command_Command_MAX = EffectCommand_Command_PLAY_RTP;
const int EffectCommand_Command_Command_ARRAYSIZE = EffectCommand_Command_Command_MAX + 1;

const ::google::protobuf::EnumDescriptor* EffectCommand_Command_descriptor();
inline const ::std::string& EffectCommand_Command_Name(EffectCommand_Command value) {
  return ::google::protobuf::internal::NameOfEnum(
    EffectCommand_Command_descriptor(), value);
}
inline bool EffectCommand_Command_Parse(
    const ::std::string& name, EffectCommand_Command* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EffectCommand_Command>(
    EffectCommand_Command_descriptor(), name, value);
}
// ===================================================================

class EffectCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NullSpaceIPC.EffectCommand) */ {
 public:
  EffectCommand();
  virtual ~EffectCommand();

  EffectCommand(const EffectCommand& from);

  inline EffectCommand& operator=(const EffectCommand& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EffectCommand& default_instance();

  void Swap(EffectCommand* other);

  // implements Message ----------------------------------------------

  inline EffectCommand* New() const { return New(NULL); }

  EffectCommand* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EffectCommand& from);
  void MergeFrom(const EffectCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EffectCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef EffectCommand_Command Command;
  static const Command UNKNOWN =
    EffectCommand_Command_UNKNOWN;
  static const Command PLAY =
    EffectCommand_Command_PLAY;
  static const Command PLAY_CONTINUOUS =
    EffectCommand_Command_PLAY_CONTINUOUS;
  static const Command HALT =
    EffectCommand_Command_HALT;
  static const Command PLAY_RTP =
    EffectCommand_Command_PLAY_RTP;
  static inline bool Command_IsValid(int value) {
    return EffectCommand_Command_IsValid(value);
  }
  static const Command Command_MIN =
    EffectCommand_Command_Command_MIN;
  static const Command Command_MAX =
    EffectCommand_Command_Command_MAX;
  static const int Command_ARRAYSIZE =
    EffectCommand_Command_Command_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Command_descriptor() {
    return EffectCommand_Command_descriptor();
  }
  static inline const ::std::string& Command_Name(Command value) {
    return EffectCommand_Command_Name(value);
  }
  static inline bool Command_Parse(const ::std::string& name,
      Command* value) {
    return EffectCommand_Command_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .NullSpaceIPC.EffectCommand.Command command = 1;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  ::NullSpaceIPC::EffectCommand_Command command() const;
  void set_command(::NullSpaceIPC::EffectCommand_Command value);

  // optional uint32 area = 2;
  void clear_area();
  static const int kAreaFieldNumber = 2;
  ::google::protobuf::uint32 area() const;
  void set_area(::google::protobuf::uint32 value);

  // optional string effect = 3;
  void clear_effect();
  static const int kEffectFieldNumber = 3;
  const ::std::string& effect() const;
  void set_effect(const ::std::string& value);
  void set_effect(const char* value);
  void set_effect(const char* value, size_t size);
  ::std::string* mutable_effect();
  ::std::string* release_effect();
  void set_allocated_effect(::std::string* effect);

  // optional float strength = 4;
  void clear_strength();
  static const int kStrengthFieldNumber = 4;
  float strength() const;
  void set_strength(float value);

  // @@protoc_insertion_point(class_scope:NullSpaceIPC.EffectCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int command_;
  ::google::protobuf::uint32 area_;
  ::google::protobuf::internal::ArenaStringPtr effect_;
  float strength_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_EffectCommand_2eproto();
  friend void protobuf_AssignDesc_EffectCommand_2eproto();
  friend void protobuf_ShutdownFile_EffectCommand_2eproto();

  void InitAsDefaultInstance();
  static EffectCommand* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// EffectCommand

// optional .NullSpaceIPC.EffectCommand.Command command = 1;
inline void EffectCommand::clear_command() {
  command_ = 0;
}
inline ::NullSpaceIPC::EffectCommand_Command EffectCommand::command() const {
  // @@protoc_insertion_point(field_get:NullSpaceIPC.EffectCommand.command)
  return static_cast< ::NullSpaceIPC::EffectCommand_Command >(command_);
}
inline void EffectCommand::set_command(::NullSpaceIPC::EffectCommand_Command value) {
  
  command_ = value;
  // @@protoc_insertion_point(field_set:NullSpaceIPC.EffectCommand.command)
}

// optional uint32 area = 2;
inline void EffectCommand::clear_area() {
  area_ = 0u;
}
inline ::google::protobuf::uint32 EffectCommand::area() const {
  // @@protoc_insertion_point(field_get:NullSpaceIPC.EffectCommand.area)
  return area_;
}
inline void EffectCommand::set_area(::google::protobuf::uint32 value) {
  
  area_ = value;
  // @@protoc_insertion_point(field_set:NullSpaceIPC.EffectCommand.area)
}

// optional string effect = 3;
inline void EffectCommand::clear_effect() {
  effect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EffectCommand::effect() const {
  // @@protoc_insertion_point(field_get:NullSpaceIPC.EffectCommand.effect)
  return effect_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EffectCommand::set_effect(const ::std::string& value) {
  
  effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NullSpaceIPC.EffectCommand.effect)
}
inline void EffectCommand::set_effect(const char* value) {
  
  effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NullSpaceIPC.EffectCommand.effect)
}
inline void EffectCommand::set_effect(const char* value, size_t size) {
  
  effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NullSpaceIPC.EffectCommand.effect)
}
inline ::std::string* EffectCommand::mutable_effect() {
  
  // @@protoc_insertion_point(field_mutable:NullSpaceIPC.EffectCommand.effect)
  return effect_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EffectCommand::release_effect() {
  // @@protoc_insertion_point(field_release:NullSpaceIPC.EffectCommand.effect)
  
  return effect_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EffectCommand::set_allocated_effect(::std::string* effect) {
  if (effect != NULL) {
    
  } else {
    
  }
  effect_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), effect);
  // @@protoc_insertion_point(field_set_allocated:NullSpaceIPC.EffectCommand.effect)
}

// optional float strength = 4;
inline void EffectCommand::clear_strength() {
  strength_ = 0;
}
inline float EffectCommand::strength() const {
  // @@protoc_insertion_point(field_get:NullSpaceIPC.EffectCommand.strength)
  return strength_;
}
inline void EffectCommand::set_strength(float value) {
  
  strength_ = value;
  // @@protoc_insertion_point(field_set:NullSpaceIPC.EffectCommand.strength)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace NullSpaceIPC

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::NullSpaceIPC::EffectCommand_Command> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NullSpaceIPC::EffectCommand_Command>() {
  return ::NullSpaceIPC::EffectCommand_Command_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_EffectCommand_2eproto__INCLUDED
